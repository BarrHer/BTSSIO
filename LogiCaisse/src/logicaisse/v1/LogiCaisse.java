/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package logicaisse.v1;

import Connexion.*;
import Frames.Frame1;
import Panels.Panel1;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/*
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author barhe
 */


/**
 *
 * @author stssio2
 */


public class LogiCaisse extends javax.swing.JFrame {
    
    GridBagLayout layout = new GridBagLayout();
    Panel1 p1;
    int qt = 1;

    
    
    /*
    class connexion {
        
        
    
    private static final String user = "ad_annuaire";
    private static final String pass = "pwannuaire";
    private static final String url = "jdbc:mysql://localhost/caisse";
    
    public void main(String[] args) throws SQLException, ClassNotFoundException{
        
        try{
            StringBuffer buffer = new StringBuffer();
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM Produit WHERE Libelle_produit = 'Fenta' ");
            System.out.println("connect√©");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));
            
            System.out.println(buffer.toString());
            
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        
}
    

    /**
     * Creates new form LogiCaisse
     */
    

    public LogiCaisse() {
        initComponents();
        p1 = new Panel1();
        Frites.setVisible(false);
        Sandwich.setVisible(false);
        boisson.setVisible(false);
        AffValider.setVisible(false);
       // PanelPrin.setLayout(layout);
        //GridBagConstraints c = new GridBagConstraints();
        //c.gridx = 0;
        //c.gridy = 0;
        //PanelPrin.add(p1,c);
        p1.setVisible(false);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        PanelPrin = new javax.swing.JPanel();
        Frites = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        Sandwich = new javax.swing.JPanel();
        Sdw7 = new javax.swing.JButton();
        Sdw8 = new javax.swing.JButton();
        Sdw9 = new javax.swing.JButton();
        Sdw10 = new javax.swing.JButton();
        Sdw11 = new javax.swing.JButton();
        Sdw12 = new javax.swing.JButton();
        boisson = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Panel = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabCommande = new javax.swing.JTable();
        Valider = new javax.swing.JButton();
        Supprimer = new javax.swing.JButton();
        Annuler = new javax.swing.JButton();
        AffValider = new javax.swing.JPanel();
        PhraseValider = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.red);
        setMaximumSize(new java.awt.Dimension(1600, 900));
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.darkGray);

        jLabel1.setFont(new java.awt.Font("Noto Sans CJK KR Medium", 1, 12)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Total : ");

        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });

        PanelPrin.setBackground(java.awt.Color.darkGray);

        Frites.setBackground(java.awt.Color.darkGray);

        jButton14.setBackground(new java.awt.Color(215, 166, 48));
        jButton14.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton14.setText("Succinct frite");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton17.setBackground(new java.awt.Color(215, 166, 48));
        jButton17.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton17.setText("Ample frite");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setBackground(new java.awt.Color(215, 166, 48));
        jButton18.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton18.setText("Ample Tubercule comestible");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setBackground(new java.awt.Color(215, 166, 48));
        jButton19.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton19.setText("Succinct Tubercule comestible");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FritesLayout = new javax.swing.GroupLayout(Frites);
        Frites.setLayout(FritesLayout);
        FritesLayout.setHorizontalGroup(
            FritesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FritesLayout.createSequentialGroup()
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FritesLayout.setVerticalGroup(
            FritesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FritesLayout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addGroup(FritesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Sandwich.setBackground(java.awt.Color.darkGray);

        Sdw7.setBackground(new java.awt.Color(229, 37, 51));
        Sdw7.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        Sdw7.setText("BigSteack");
        Sdw7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdw7ActionPerformed(evt);
            }
        });

        Sdw8.setBackground(new java.awt.Color(229, 37, 51));
        Sdw8.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        Sdw8.setText("Dwitch");
        Sdw8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdw8ActionPerformed(evt);
            }
        });

        Sdw9.setBackground(new java.awt.Color(229, 37, 51));
        Sdw9.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        Sdw9.setText("TartiBurger");
        Sdw9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdw9ActionPerformed(evt);
            }
        });

        Sdw10.setBackground(new java.awt.Color(229, 37, 51));
        Sdw10.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        Sdw10.setText("Raklette's");
        Sdw10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdw10ActionPerformed(evt);
            }
        });

        Sdw11.setBackground(new java.awt.Color(229, 37, 51));
        Sdw11.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        Sdw11.setText("J√©t√©hix 1080 Tea");
        Sdw11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdw11ActionPerformed(evt);
            }
        });

        Sdw12.setBackground(new java.awt.Color(229, 37, 51));
        Sdw12.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        Sdw12.setText("Ultra cheese");
        Sdw12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sdw12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SandwichLayout = new javax.swing.GroupLayout(Sandwich);
        Sandwich.setLayout(SandwichLayout);
        SandwichLayout.setHorizontalGroup(
            SandwichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SandwichLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Sdw7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(Sdw8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(Sdw9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(Sdw10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(Sdw11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(Sdw12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        SandwichLayout.setVerticalGroup(
            SandwichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SandwichLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(SandwichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sdw12, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sdw11, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sdw10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sdw9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sdw8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Sdw7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        boisson.setBackground(java.awt.Color.darkGray);

        jButton6.setBackground(new java.awt.Color(63, 193, 202));
        jButton6.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton6.setText("Montagne Doux");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(63, 193, 202));
        jButton7.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton7.setText("Peipsy");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(63, 193, 202));
        jButton2.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton2.setText("Fenta");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(63, 193, 202));
        jButton8.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton8.setText("Hepart");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(63, 193, 202));
        jButton1.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton1.setText("Raid Boule");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(63, 193, 202));
        jButton4.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton4.setText("Cola-coca");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout boissonLayout = new javax.swing.GroupLayout(boisson);
        boisson.setLayout(boissonLayout);
        boissonLayout.setHorizontalGroup(
            boissonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boissonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        boissonLayout.setVerticalGroup(
            boissonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(boissonLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(boissonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelPrinLayout = new javax.swing.GroupLayout(PanelPrin);
        PanelPrin.setLayout(PanelPrinLayout);
        PanelPrinLayout.setHorizontalGroup(
            PanelPrinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrinLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelPrinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Frites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boisson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(PanelPrinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sandwich, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelPrinLayout.setVerticalGroup(
            PanelPrinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Sandwich, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(Frites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(boisson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Panel.setBackground(java.awt.Color.darkGray);

        jButton5.setBackground(new java.awt.Color(233, 30, 30));
        jButton5.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jButton5.setText("Menu");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabCommande.setBackground(java.awt.Color.gray);
        TabCommande.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        TabCommande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produit", "Prix", "Quantit√©"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabCommande);

        Valider.setBackground(new java.awt.Color(0, 214, 70));
        Valider.setFont(new java.awt.Font("Noto Sans CJK SC Medium", 1, 12)); // NOI18N
        Valider.setText("Valider");
        Valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValiderActionPerformed(evt);
            }
        });

        Supprimer.setBackground(new java.awt.Color(214, 0, 0));
        Supprimer.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 10)); // NOI18N
        Supprimer.setText("Supprimer");
        Supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SupprimerActionPerformed(evt);
            }
        });

        Annuler.setBackground(new java.awt.Color(214, 90, 0));
        Annuler.setFont(new java.awt.Font("Noto Sans CJK KR Medium", 1, 12)); // NOI18N
        Annuler.setText("Annuler");
        Annuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnulerActionPerformed(evt);
            }
        });

        AffValider.setBackground(new java.awt.Color(229, 37, 51));

        PhraseValider.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        PhraseValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhraseValiderActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Noto Sans CJK JP Medium", 1, 12)); // NOI18N
        jLabel2.setText("TOTAL :");

        javax.swing.GroupLayout AffValiderLayout = new javax.swing.GroupLayout(AffValider);
        AffValider.setLayout(AffValiderLayout);
        AffValiderLayout.setHorizontalGroup(
            AffValiderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AffValiderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PhraseValider, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(AffValiderLayout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AffValiderLayout.setVerticalGroup(
            AffValiderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AffValiderLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(PhraseValider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Annuler, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(Valider, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AffValider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PanelPrin, javax.swing.GroupLayout.PREFERRED_SIZE, 931, Short.MAX_VALUE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(AffValider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 366, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(Supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Annuler, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Valider, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(PanelPrin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(128, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnulerActionPerformed
        // TODO add your handling code here:
        //p1.setVisible(false);
        
        //Supprimer tout le tableau
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        
        int n = mod.getRowCount();
        for (int i=n-1 ; i>=0 ; --i){
            mod.removeRow(i);
        }
        
        total.setText("");
    }//GEN-LAST:event_AnnulerActionPerformed

    private void SupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SupprimerActionPerformed
        // TODO add your handling code here:
        
        //Suppimer la ligne s√©lectionn√©e
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.removeRow(TabCommande.getSelectedRow());
        
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
        
        
    }//GEN-LAST:event_SupprimerActionPerformed

    private void ValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValiderActionPerformed
        // TODO add your handling code here:
        //p1.setVisible(true);
        AffValider.setVisible(true);
        
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        PhraseValider.setText("Vous devez payer " + sum + "euros");
        total.setText("");
        
        try{
            
            
            
            String contenu = (TabCommande.getValueAt(0,0).toString());
            for (int i =1; i<TabCommande.getRowCount();i++){
            contenu = contenu +" "+ (TabCommande.getValueAt(i,0).toString());
            
            }
            
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            stmt.executeUpdate("INSERT INTO vente (contenu_vente,prix_total) value ('"+ contenu +"', '"+ sum +"');");
            
            
            //buffer.append(rs.getFloat("Prix_produit"));
            
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
    }//GEN-LAST:event_ValiderActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Succinct frite' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Succinct frite",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
        
        boisson.setVisible(true);
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Ample frite' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Ample frite",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
        
        boisson.setVisible(true);
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Ample Tubercule comestible' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Ample Tubercule comestible",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
        
        boisson.setVisible(true);
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Succinct Tubercule comestible' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Succinct Tubercule comestible",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
        
        boisson.setVisible(true);
    }//GEN-LAST:event_jButton19ActionPerformed

    private void Sdw7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdw7ActionPerformed
        // TODO add your handling code here:
        Frites.setVisible(true);
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'BigSteack' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        
        //int n = mod.getRowCount();
        
        //String tab[] = connexion("oui");
        mod.addRow(new Object[]{"BigSteack",prix,1});
        /*
        for (int i=n-1 ; i>=0 ; --i){
            if ("BigSteack".equals(TabCommande.getValueAt(i,0).toString())){
                mod.setValueAt(qt+1,i,2);
                //mod.addRow(new Object[]{"BigSteack",4.00,2});
            }
            
            else {
            mod.addRow(new Object[]{"BigSteack",4.00,qt});
            }
        }*/
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
        
        
    }//GEN-LAST:event_Sdw7ActionPerformed

    private void Sdw8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdw8ActionPerformed
        // TODO add your handling code here:
        Frites.setVisible(true);
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Dwitch' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Dwitch",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_Sdw8ActionPerformed

    private void Sdw9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdw9ActionPerformed
        // TODO add your handling code here:
        Frites.setVisible(true);
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'TartiBurger' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"TartiBurger",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_Sdw9ActionPerformed

    private void Sdw10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdw10ActionPerformed
        // TODO add your handling code here:
        Frites.setVisible(true);
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Rakletts' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

            prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Rakletts",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_Sdw10ActionPerformed

    private void Sdw11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdw11ActionPerformed
        // TODO add your handling code here:
        Frites.setVisible(true);
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'J√©t√©hix 1080 Tea' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"J√©t√©hix 1080 Tea",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_Sdw11ActionPerformed

    private void Sdw12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sdw12ActionPerformed
        // TODO add your handling code here:
        Frites.setVisible(true);
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Ultra Cheese' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Ultra Cheese",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_Sdw12ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Sandwich.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Cola-coca' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Cola-coca",prix,1});
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Raid Boule' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Raid Boule",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Hepart' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        
        mod.addRow(new Object[]{"Hepart",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            //"jdbc:mysql://localhost/caisse?useSSL=false", "herve", "herve");
            "jdbc:mysql://192.168.64.2/caisse", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Fenta' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Fenta",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Peipsy' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Peipsy",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        float prix = 0;

        try{
            StringBuffer buffer = new StringBuffer();
            //Connection con = DriverManager.getConnection(
            //"jdbc:mysql://192.168.64.2/caisse", "logicaisse", "logicaisse");
            
            Connection con = DriverManager.getConnection(
            "jdbc:mysql://192.168.64.2/caisse?useSSL=false", "herve", "herve");
            
            //Class.forName("com.mysql.jdbc.Driver");
            //Connection con = null;
            //con = DriverManager.getConnection(url,user,pass);
            Statement stmt;
            ResultSet rs;
            stmt = con.createStatement (ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = stmt.executeQuery("SELECT Prix_produit FROM produit WHERE Libelle_produit = 'Montagne Doux' ");
            rs.last();
            buffer.append(rs.getFloat("Prix_produit"));

           prix = Float.parseFloat(buffer.toString());
 
        }
        catch (SQLException e ){
            System.err.print(e);
        }
        
        DefaultTableModel mod = (DefaultTableModel)TabCommande.getModel();
        mod.addRow(new Object[]{"Montagne Doux",prix,1});
        
        float sum = 0;
        for (int i =0; i<TabCommande.getRowCount();i++){
            sum = sum + Float.parseFloat(TabCommande.getValueAt(i,1).toString());
            
        }
        
        total.setText(Float.toString(sum));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void PhraseValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhraseValiderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhraseValiderActionPerformed

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogiCaisse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogiCaisse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogiCaisse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogiCaisse.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogiCaisse().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AffValider;
    private javax.swing.JButton Annuler;
    private javax.swing.JPanel Frites;
    private javax.swing.JPanel Panel;
    private javax.swing.JPanel PanelPrin;
    private javax.swing.JTextField PhraseValider;
    private javax.swing.JPanel Sandwich;
    private javax.swing.JButton Sdw10;
    private javax.swing.JButton Sdw11;
    private javax.swing.JButton Sdw12;
    private javax.swing.JButton Sdw7;
    private javax.swing.JButton Sdw8;
    private javax.swing.JButton Sdw9;
    private javax.swing.JButton Supprimer;
    private javax.swing.JTable TabCommande;
    private javax.swing.JButton Valider;
    private javax.swing.JPanel boisson;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables

}
